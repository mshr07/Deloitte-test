pipeline {
    agent any
    tools {
        maven 'Maven 3.6.3' // Ensure this matches the name in Jenkins configuration
        jfrog 'jfrog-cli'
    }
    environment {
        JFROG_URL = "https://trial2aj5il.jfrog.io/artifactory"
        JFROG_REPO = "springboot-docker"  // Change to your repository name
        IMAGE_NAME = "springbootjfrog"
        IMAGE_TAG = "latest"
        JFROG_CREDENTIALS = credentials('JF_ACCESS_TOKEN')
    }
    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'POC_CD_Harness',  // Replace with your branch name
                    credentialsId: 'github', // Set up in Jenkins Credentials
                    url: 'https://github.com/Deloitte-Default/carnia.git'
            }
        }
        stage('Build') {
            steps {
                echo 'Building application...'
                sh 'mvn clean package'
            }
        }
        stage('Run Tests') {
            steps {
                echo 'Running JUnit Tests...'
                sh 'mvn test'
                sh 'mvn jacoco:report'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh 'mvn sonar:sonar -Dsonar.projectKey=Spring-Boot-Login-App -Dsonar.host.url=http://10.104.59.198:9000 -Dsonar.login=sqa_7ad3a4fbb42fa95a33d3c099f34282975f684b86 -Dsonar.coverage.jacoco.xmlReportPaths=/home/jenkins/agent/workspace/Demo/target/site/jacoco/jacoco.xml'
                }
            }
			}
		stage('Build Docker Image') {
            steps {
                sh 'docker build -t "${IMAGE_NAME}:${IMAGE_TAG}" .'
            }
        }
		stage('Tag Docker Image') {
            steps {
                sh 'docker tag "${IMAGE_NAME}:${IMAGE_TAG}" trial2aj5il.jfrog.io/springboot-docker/"${IMAGE_NAME}:${IMAGE_TAG}"'
            }
        }
		stage('Login to Artifactory') {
            steps {
                // Login to Artifactory
                withCredentials([usernamePassword(credentialsId: 'artifactory-credentials', usernameVariable: 'ARTIFACTORY_USER', passwordVariable: 'ARTIFACTORY_PASSWORD')]) {
                    sh 'echo $ARTIFACTORY_PASSWORD | docker login trial2aj5il.jfrog.io -u $ARTIFACTORY_USER --password-stdin'
                }
            }
        }
		stage('Push Docker Image') {
            steps {
                // Push the Docker image
                sh 'docker push trial2aj5il.jfrog.io/springboot-docker/"${IMAGE_NAME}:${IMAGE_TAG}"'
            }
        }
        
    }
}
